buildscript {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.7.2')
    }
}

plugins {
    id "io.spring.dependency-management" version "1.0.3.RELEASE"
    id "org.springframework.boot" version "2.1.8.RELEASE"
    id "org.sonarqube" version "2.6.2"
    id "org.owasp.dependencycheck" version "5.3.2"
    id "com.github.ManifestClasspath" version "0.1.0-RELEASE"
}

apply plugin: "java"
apply plugin: 'io.spring.dependency-management'
apply plugin: "idea"
apply plugin: "com.jfrog.artifactory"
apply plugin: "com.github.ManifestClasspath"

allprojects {
    if(project.convention.findPlugin(JavaPluginConvention)) {
        // Change the output directory for the main and test source sets back to the old path
        sourceSets.main.output.classesDir = new File(buildDir, "classes/main")
        sourceSets.test.output.classesDir = new File(buildDir, "classes/test")
    }
}

artifactoryPublish.skip = true

archivesBaseName = 'yti-datamodel-api'

repositories {
    mavenLocal()
    mavenCentral()
    google()
    jcenter()

    // put your artifactory parameters to $HOME/.gradle/gradle.properties
    if (project.hasProperty('artifactoryUrl')) {
        maven {
            url "$artifactoryUrl"
            credentials {
                username "$artifactoryUsername"
                password "$artifactoryPassword"
            }
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Greenwich.RELEASE'
    }
}

configurations {
    all {
        resolutionStrategy.cacheDynamicVersionsFor 0, "seconds"
        resolutionStrategy.cacheChangingModulesFor 0, "seconds"
    }
    swaggerUI { transitive = false }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-jersey"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-jetty"
    compile "org.springframework.security:spring-security-core"
    compile "org.springframework.security:spring-security-config"
    compile "org.springframework.security:spring-security-web"
    compile "fi.vm.yti:yti-spring-security:0.1.13"
    compile "fi.vm.yti:yti-spring-migration:0.1.4"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"
    compile "org.springframework.cloud:spring-cloud-starter-config"
    compile "org.springframework.cloud:spring-cloud-starter-sleuth"
    compile "ch.qos.logback:logback-core"
    compile "net.logstash.logback:logstash-logback-encoder:5.0"
    compile "org.jetbrains:annotations:15.0"
    compile "org.elasticsearch:elasticsearch:6.5.4"
 	compile group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '6.5.4'
    compile "com.atlassian.commonmark:commonmark:0.10.0"
    compile group: 'org.json', name: 'json', version: '20190722'
    compile "org.jsoup:jsoup:1.11.1"
    compile "com.jayway.jsonpath:json-path:2.4.0"
    compile group: 'io.swagger.core.v3', name: 'swagger-core', version: '2.0.9'
    compile group: 'io.swagger.core.v3', name: 'swagger-jaxrs2', version: '2.0.9'
    swaggerUI 'org.webjars:swagger-ui:3.24.0'
    compile "org.topbraid:shacl:1.0.1"
    compile "org.apache.jena:jena-core:3.9.0"
    compile "org.apache.jena:jena-arq:3.9.0"
    compile "org.apache.jena:jena-rdfconnection:3.9.0"
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    compile "org.glassfish:javax.json:1.0.4"
    compile "org.glassfish.jersey.media:jersey-media-sse:2.25.1"
    compile "com.github.jsonld-java:jsonld-java:0.12.0"
    compile "org.jboss.forge.roaster:roaster-api:2.19.4.Final"
    compile "org.jboss.forge.roaster:roaster-jdt:2.19.4.Final"
    compile "org.reflections:reflections:0.9.11"
    compile "com.google.guava:guava:24.1-jre"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "com.jayway.jsonpath:json-path-assert:2.4.0"
    testCompile "org.mockito:mockito-core:2.7.22"
}

compileJava.dependsOn(processResources)

bootRun {
    systemProperties System.properties
    jvmArgs = ["-Dspring.output.ansi.enabled=ALWAYS"]
}

springBoot {
    mainClassName = "fi.vm.yti.datamodel.api.Application"
}

sonarqube {
    properties {
        property "sonar.projectKey", "yti-datamodel-api"
        property "sonar.projectName", "yti-datamodel-api"
        property("sonar.dependencyCheck.reportPath", "$buildDir/reports/dependency-check-report.xml")
        property("sonar.dependencyCheck.htmlReportPath", "$buildDir/reports/dependency-check-report.html")
    }
}

dependencyCheck {
    format = 'ALL'
    autoUpdate = false
    analyzers {
        centralEnabled = false
    }
    data {
        directory = System.getenv('OWASP_DATA_DIR')
    }
}

task unzipSwagger(type:Copy) {
    from zipTree(configurations.swaggerUI.singleFile)
    include "META-INF/resources/webjars/swagger-ui/3.24.0/**"
    into "build/classes/main/static/datamodel-api/swagger-ui"
    eachFile { f ->
        if (f.path.endsWith('index.html')) {
            filter { line ->
                line.replace('"https://petstore.swagger.io/v2/swagger.json"', '"/datamodel-api/api/openapi.yaml", docExpansion: "none", validatorUrl: null')
            }
        }
        f.path = f.path.replaceFirst('META-INF/resources/webjars/swagger-ui/3.24.0/', '')
    }
    includeEmptyDirs = false
}

build.dependsOn unzipSwagger
bootJar.dependsOn unzipSwagger
