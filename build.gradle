buildscript {
    repositories {
        mavenCentral()
        google()
        jcenter()
       
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.24.16')
    }
}

plugins {
    id "io.spring.dependency-management" version "1.1.0"
    id "org.springframework.boot" version "3.0.2"
    id "org.sonarqube" version "3.3"
    id "jacoco"
    id "org.owasp.dependencycheck" version "7.4.4"
    id "com.gorylenko.gradle-git-properties" version "2.3.1"
    id "com.github.ben-manes.versions" version "0.39.0"
}

apply plugin: "java"
apply plugin: 'io.spring.dependency-management'
apply plugin: "idea"
apply plugin: "com.jfrog.artifactory"

artifactoryPublish.skip = true

archivesBaseName = 'yti-datamodel-api'

repositories {
    mavenLocal()
    mavenCentral {
        content { excludeGroupByRegex "fi\\.vm\\.yti.*" }
    }
    google {
        content { excludeGroupByRegex "fi\\.vm\\.yti.*" }
    }
    jcenter {
        content { excludeGroupByRegex "fi\\.vm\\.yti.*" }
    }
    maven {
        url = uri("https://maven.pkg.github.com/CSCfi/yti-spring-security")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GPR_USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("GRP_TOKEN")
        }        
    }
    maven {
        url = uri("https://maven.pkg.github.com/CSCfi/yti-spring-migration")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GPR_USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("GPR_TOKEN")
        }        
    }
    // put your artifactory parameters to $HOME/.gradle/gradle.properties
    if (project.hasProperty('artifactoryUrl')) {
        maven {
            url "$artifactoryUrl"
            credentials {
                username "$artifactoryUsername"
                password "$artifactoryPassword"
            }
        }
    }
    maven { url 'https://jitpack.io' }

}

sourceCompatibility = 17
targetCompatibility = 17

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2022.0.0'
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.security:spring-security-core"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.security:spring-security-config"
    implementation "org.springframework.security:spring-security-web"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-jdbc"

    implementation "fi.vm.yti:yti-spring-security:0.4.0"
    implementation "fi.vm.yti:yti-spring-migration:0.2.0"

    implementation "org.springframework.cloud:spring-cloud-starter"
    implementation "org.springframework.cloud:spring-cloud-starter-config"
    implementation "org.springframework.cloud:spring-cloud-starter-bootstrap"

    implementation "ch.qos.logback:logback-core"
    implementation "net.logstash.logback:logstash-logback-encoder:7.2"
    implementation "jakarta.validation:jakarta.validation-api:3.0.2"

    implementation "org.opensearch.client:opensearch-java:2.2.0"
    implementation "org.opensearch.client:opensearch-rest-client:2.3.0"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2"

    implementation "org.topbraid:shacl:1.4.2"
    implementation "org.apache.jena:jena-core:4.6.1"
    implementation "org.apache.jena:jena-arq:4.6.1"
    implementation "org.apache.jena:jena-rdfconnection:4.6.1"
    implementation "org.apache.jena:jena-querybuilder:4.6.1"
    implementation "com.google.guava:guava:31.1-jre"
    
    implementation "com.networknt:json-schema-validator:1.0.83"
    
    implementation "org.flywaydb:flyway-core"
    implementation "org.postgresql:postgresql"
    
    implementation "com.github.fnoio:function-agent-java:v1.1.0"
    implementation files("lib/json-path-custom-2.8.0.jar")
    // https://mvnrepository.com/artifact/net.minidev/json-smart
    implementation 'net.minidev:json-smart:2.5.0'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-csv
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.15.2'
    // https://mvnrepository.com/artifact/com.github.javadev/underscore
    implementation 'com.github.javadev:underscore:1.93'
    // https://mvnrepository.com/artifact/info.debatty/java-string-similarity
    implementation 'info.debatty:java-string-similarity:2.0.0'
   // https://mvnrepository.com/artifact/com.opencsv/opencsv
    implementation 'com.opencsv:opencsv:5.8'
    
    implementation group: 'org.xmlunit', name: 'xmlunit-core', version: '2.9.1'
    implementation group: 'org.xmlunit', name: 'xmlunit-assertj', version: '2.9.1'

    implementation group: 'org.xmlunit', name: 'xmlunit-matchers', version: '2.9.1'
    

    compileOnly "org.springframework.boot:spring-boot-configuration-processor"
    compileOnly "org.jetbrains:annotations:23.0.0"

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    {
        exclude group: 'com.jayway.jsonpath', module: 'json-path'
    }
    //testImplementation "com.jayway.jsonpath:json-path-assert:2.7.0"    
    testImplementation "org.mockito:mockito-core:4.8.0"
    testImplementation "net.bytebuddy:byte-buddy:1.12.22"

    developmentOnly("org.springframework.boot:spring-boot-devtools")
    //exclude group: 'com.jayway.jsonpath', module: 'json-path', version: '2.7.0'
    
// https://mvnrepository.com/artifact/com.github.victools/jsonschema-generator
    compileOnly group: 'com.github.victools', name: 'jsonschema-generator', version: '4.32.0'    
    compileOnly group: 'com.fasterxml.jackson.module', name: 'jackson-module-jsonSchema', version: '2.15.3'
    
    implementation('io.github.zenwave360:json-schema-ref-parser-jvm:0.8.2') {
        exclude group: 'com.jayway.jsonpath'
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "yti-datamodel-api"
        property "sonar.projectName", "yti-datamodel-api"
        property("sonar.dependencyCheck.reportPath", "$buildDir/reports/dependency-check-report.xml")
        property("sonar.dependencyCheck.htmlReportPath", "$buildDir/reports/dependency-check-report.html")
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
test {
    useJUnitPlatform()
    forkEvery 20
}


dependencyCheck {
    format = 'ALL'
    autoUpdate = false
    analyzers {
        centralEnabled = false
    }
    data {
        directory = System.getenv('OWASP_DATA_DIR')
    }
}
